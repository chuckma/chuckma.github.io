<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Echarts 2.0 处理JSON数据]]></title>
      <url>%2F2016%2F12%2F20%2Fechart%2F</url>
      <content type="text"><![CDATA[有个项目用到了Echarts 的动态数据加载，自己折腾了半天才做出来，所以在这里记录一些东西，在此之前也通过搜索引擎学习了解了一些，这里直接看一下我实现的过程。 下面是实现功能的一个简单示例 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Ajax加载数据&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; #content &#123; position: fixed; left: 300px; top: 100px; width: 600px; height: 400px; border: solid 1px #6A5ACD; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;&lt;script src=&quot;javascript/echarts-all.js&quot;&gt;&lt;/script&gt;&lt;script&gt; var myChart = echarts.init(document.getElementById(&apos;content&apos;)); // 在这里模拟了json格式的数据，实际项目中使用ajax 请求得到。 var list = [ &#123;&quot;areaId&quot;: &quot;1&quot;, &quot;areaName&quot;: &quot;下沙&quot;, &quot;areaCount&quot;: 123&#125;, &#123;&quot;areaId&quot;: &quot;2&quot;, &quot;areaName&quot;: &quot;下城&quot;, &quot;areaCount&quot;: 145&#125;, &#123;&quot;areaId&quot;: &quot;3&quot;, &quot;areaName&quot;: &quot;空港&quot;, &quot;areaCount&quot;: 134&#125; ]; var oData = []; for (var i = 0; i &lt; list.length; i++) &#123; oData.push(&#123;value: list[i].areaCount, name: list[i].areaName&#125;); &#125; var option = &#123; series: [ &#123; name: &apos;访问来源&apos;, type: &apos;pie&apos;, radius: &apos;55%&apos;, center: [&apos;50%&apos;, &apos;60%&apos;], data: oData &#125; ] &#125;; option.series.data = oData; myChart.setOption(option) /* */&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 后记Echarts 2.0 动态加载数据，一般来说加载的都是legend中data，series 中data，等的数据，对于像我这样的新手来说，可能就是JS处理起来有些困难，其他都还好。Echarts 使用了一段时间，不算太难，二次开发成本比较低，基本是拿来就可以修改修改使用的，我这样想也许是我只做了一些简单的图表，以后还得多学习了解。PS：如果哪里有错误或者不足，烦请指出来，我们一起学习进步，感谢。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Oracel 数据库函数]]></title>
      <url>%2F2016%2F10%2F27%2Foracle-basefun%2F</url>
      <content type="text"><![CDATA[数值函数12345678910111213141516171819202122232425262728293031-- 数值函数 ,(四舍五入, 取整,常用计算,三角)-- 1.四舍五入 round(n[,m]) ,省略m :表示 0 ;m&gt;0 ;小数点后m位 ;m&lt;0 : 小数点前m位select round(23.4),round(23.45,1),round(23.45,-1) from dual;-- 取整函数 CEIL(n) 取最大; FLOOR(n), 取整取最小select ceil(23.45),floor(23.45) from dual;-- 常用计算ABS(n) 取绝对值;select abs(23.45),abs(-23),abs(0) from dual;--MOD(m,n) 取余数 m 代表被除数, n为除数, 其中有一个为null 则结果为nullselect mod(5,2) from dual;-- POWER(m,n) 返回m的n次幂select power(2,3),power(2,null) from dual;--SORT(n) 平方根select sqrt(16) from dual;--========================---- 三角函数 SIN(n),ASIN(n) ,COS(n),ACOS(n),TAN(n),ATAN(n) 日期函数12345678910111213141516171819202122232425--系统时间,日期操作--系统时间 SYSDATE 默认格式DD-MON_RR 日月年select sysdate from dual;--日期操作 1 ADD_MONTHS(date,i) 返回在指定的日期上添加的月份 i可以是任何的整数,若是小数 会自动截取整数,若为负数,则是减去日期select add_months(sysdate,2),add_months(sysdate,-3),add_months(sysdate,3.8) from dual;-- 日期操作2 NEXT_DAY(date,char) 如果char的值是 星期一 返回的是date指定日期的下周一是哪天select next_day(sysdate,&apos;星期一&apos;) from dual;-- 日期操作函数3 LAST_DAY(date) 返回某个月的最后一天是几号select last_day(sysdate) from dual;-- 日期操作函数4 MMONTHS_BEWTEEN(date1,date2) 返回两个日期之间相隔的月份select months_between(&apos;20-5月-15&apos;,&apos;10-1月-15&apos;) from dual;-- 日期操作函数 5 EXTRACT(date FROM datetime)select extract(day from sysdate),extract(month from sysdate),extract(year from sysdate) from dual; 转换函数1234567891011121314151617181920--日期转换成字符的函数select to_char(sysdate,&apos;YYYY-MM-DD HH24:MI:SS&apos;) from dual;select to_char(sysdate,&apos;YYYY-MM-DD HH12:MI:SS&apos;) from dual--字符转换成日期的函数 TO_DATE(char[,fmt[,params]]) params 用于指定日期的语言select to_date(&apos;2016-03-24&apos;,&apos;YYYY-MM-DD&apos;) from dual;-- 数字转换成字符的函数--TO_CHAR(number,[fmt])select to_char(&apos;12345.678&apos;,&apos;$99,999.999&apos;) from dual;-- 字符转换成数字的函数 TO_NUMBER(char[,fmt])select to_number(&apos;$1,23456&apos;,&apos;$9999999&apos;) from dual;select to_number(&apos;+1,23456&apos;,&apos;S9999999&apos;) from dual; 字符函数12345678910111213141516171819202122232425262728293031323334353637383940414243--=============字符函数的使用============----大小写转换函数,获取字符串函数,字符串连接函数,去除子串函数,替换函数-- 大小写转换 UPPER(char) LOWER(char) INITCAP(char) 用途: 注册用户名时候不区分大小写select upper(&apos;abde&apos;),lower(&apos;ADe&apos;),initcap(&apos;ade&apos;) from dual;-- 获取子字符串函数 SUBSTR(char,[m[,n]]) .char :源字符串 m:开始的位置 n: 截取的位数 m可以从0开始,n可以省略-- m为负数,表示从尾部开始往后截取select substr(&apos;autocommit&apos;,2,3),substr(&apos;autocommit&apos;,2),substr(&apos;autocommit&apos;,-2,5) from dual;-- 获取字符串的长度 LENGTH(char)select length(&apos;abd&apos;),length(&apos;abc &apos;) from dual;-- 字符串连接函数 CONCAT(char1,char2)select concat(&apos;abd&apos;,&apos;xxx&apos;) from dual;-- 上面的等价于下面select &apos;abd&apos;||&apos;xxx&apos; from dual;-- 去除子串函数 TRIM(c2 FROM c1);select trim(&apos;a&apos; from &apos;abced&apos;) from dual;--LTRIM(c1[,c2]) c1中去除c2 只能去除一个select ltrim(&apos;ababaa&apos;,&apos;a&apos;) from dual;-- RTIRM(c1[,c2])select rtrim(&apos;ababaa&apos;,&apos;a&apos;) from dual;-- TRIM(c1) 只有一个参数 去除两边空格-- 替换函数 REPLACE(char,s_string[,r_string]) 省略r_string 则被空格替代select replace(&apos;abcde&apos;,&apos;a&apos;,&apos;A&apos;) ,replace (&apos;abcde&apos;,&apos;a&apos;),replace (&apos;abcde&apos;,&apos;ab&apos;,&apos;A&apos;)from dual;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Oracle SQL 基础学习]]></title>
      <url>%2F2016%2F10%2F06%2Fbasesql%2F</url>
      <content type="text"><![CDATA[123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102CREATE TABLE USERINFO( ID NUMBER(6,0) PRIMARY KEY, USERNAME VARCHAR2(20), USERPWD VARCHAR2(20), EMAIL VARCHAR2(30), REDATE DATE);-- 增加字段ALTER TABLE table_name ADD column_name VARCHAR2(30);-- 修该ALTER TABLE table_name MODIFY column_name VARCHAR2(400);-- 修改表字段ALTER TABLE table_name MODIFY column_name NUMBER(6,0);--删除字段ALTER TABLE table_name DROP COLUMN column_name;-- 给字段改别名ALTER TABLE table_name RENAME COLUMN old_column_name TO new_column_name;-- 修改表名RENAME table_name TO new_table_name;--- 删除表中数据(仅数据表中的数据，不删除表)TRUNCATE TABLE table_name;--- 删除整张表结构DROP TABLE USERINFO;---------------分隔线---------------------------操作表--添加数据INSERT INTO USERINFO(ID,USERNAME,USERPWD,EMAIL,REDATE)VALUES(1,&apos;小米&apos;,&apos;123456&apos;,&apos;xiaoming.@163.com&apos;,SYSDATE);-- 向表中指定字段添加值INSERT INTO USERINFO (ID,USERNAME,USERPWD)VALUES(2,&apos;VVV&apos;,&apos;123456&apos;);-- 向表中添加默认值 ,重新创建一个表CREATE TABLE USERINFO1( ID NUMBER(6,0), REDATE DATE DEFAULT SYSDATE);---------------分隔线-------------------------- 表约束ALTER TABLE table_name MODIFY column_name datatype NOT NULL;--- 去除非空约束ALTER TABLE table_name MODIFY column_name datatype NULL;-- 1创建表时设置主键约束CREATE TABLE UESRINFO_P( ID NUMBER(6,0) PRIMARY KEY, USERNAME VARCHAR2(20), USERPWD VARCHAR2(20));--2创建表时设置主键约束,表级约束CREATE TABLE USERINFO_P1( ID NUMBER(6,0), USERNAME VARCHAR2(20), USERPWD VARCHAR2(20), CONSTRAINT PK_ID_USERNAME PRIMARY KEY(ID,USERNAME));-- 修改表时添加主键约束ALTER TABLE table_name ADD CONSTRAINT constraint_name PRIMARY KEY(column_name1,...);-- 查询表的约束名SELECT CONSTRAINT_NAME FROM USER_CONSTRAINTS WHERE TABLE_NAME=&apos;table_name&apos;;---更改约束的名字ALTER TABLE table_name RENAME CONSTRAINT old_name TO new_name;--- 禁用主键约束ALTER TABLE table_name DISABLE CONSTRAINT constraint_name;---查看表约束状态SELECT CONSTRAINT_NAME,STATUS FROM USER_CONSTRAINTS WHERE TABLE_NAME=&apos;table_name&apos;;-- 删除主键约束的两种方法(第一种,可以级联删除,可以去掉其他表引用这个表字段的地方)ALTER TABLE table_name DROP PRIMARY KEY[CASCADE];ALTER TABLE table_name DROP CONSTRAINT constraint_name;SELECT CONSTRAINT_NAME,STATUS FROM USER_CONSTRAINTS WHERE TABLE_NAME=&apos;USERINFO_P1&apos;;SELECT *FROM USERINFO]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[小站开启篇]]></title>
      <url>%2F2016%2F09%2F28%2Ffirst-essay%2F</url>
      <content type="text"><![CDATA[大家好,最近几天折腾了一下自己的博客,纯粹是折腾着玩玩,目前是在做JavaWeb开发方面的工作,这是我的 GitHub.目前博客还有些东西没有做好,等我弄弄好之后,再来随便写两篇.]]></content>
    </entry>

    
  
  
</search>
